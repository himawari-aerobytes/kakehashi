<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.himawari.kakehashi.mapper.LoginUserMapper">
    <resultMap id="BaseResultMap" type="com.himawari.kakehashi.domain.LoginUser">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="member_id" jdbcType="INTEGER" property="memberId"/>
        <result column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="login_user_name" jdbcType="VARCHAR" property="loginUserName"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="isEnabled" jdbcType="INTEGER" property="isenabled"/>
        <result column="updatedat" jdbcType="TIMESTAMP" property="updatedat"/>
        <result column="createdat" jdbcType="TIMESTAMP" property="createdat"/>
        <result column="updatedby" jdbcType="VARCHAR" property="updatedby"/>
        <result column="createdby" jdbcType="VARCHAR" property="createdby"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        id, member_id, role_id, login_user_name, email, isEnabled, updatedat, createdat,
        updatedby, createdby
    </sql>
    <select id="selectByExample" parameterType="com.himawari.kakehashi.domain.LoginUserExample"
            resultMap="BaseResultMap">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from login_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        select
        <include refid="Base_Column_List"/>
        from login_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        delete from login_user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.himawari.kakehashi.domain.LoginUserExample">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        delete from login_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.himawari.kakehashi.domain.LoginUser"
            useGeneratedKeys="true">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        insert into login_user (member_id, role_id, login_user_name,
        email, isEnabled, updatedat,
        createdat, updatedby, createdby
        )
        values (#{memberId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{loginUserName,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{isenabled,jdbcType=INTEGER}, #{updatedat,jdbcType=TIMESTAMP},
        #{createdat,jdbcType=TIMESTAMP}, #{updatedby,jdbcType=VARCHAR}, #{createdby,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.himawari.kakehashi.domain.LoginUser"
            useGeneratedKeys="true">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        insert into login_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="memberId != null">
                member_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="loginUserName != null">
                login_user_name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="isenabled != null">
                isEnabled,
            </if>
            <if test="updatedat != null">
                updatedat,
            </if>
            <if test="createdat != null">
                createdat,
            </if>
            <if test="updatedby != null">
                updatedby,
            </if>
            <if test="createdby != null">
                createdby,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="memberId != null">
                #{memberId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="loginUserName != null">
                #{loginUserName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="isenabled != null">
                #{isenabled,jdbcType=INTEGER},
            </if>
            <if test="updatedat != null">
                #{updatedat,jdbcType=TIMESTAMP},
            </if>
            <if test="createdat != null">
                #{createdat,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedby != null">
                #{updatedby,jdbcType=VARCHAR},
            </if>
            <if test="createdby != null">
                #{createdby,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.himawari.kakehashi.domain.LoginUserExample"
            resultType="java.lang.Long">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        select count(*) from login_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        update login_user
        <set>
            <if test="row.id != null">
                id = #{row.id,jdbcType=INTEGER},
            </if>
            <if test="row.memberId != null">
                member_id = #{row.memberId,jdbcType=INTEGER},
            </if>
            <if test="row.roleId != null">
                role_id = #{row.roleId,jdbcType=INTEGER},
            </if>
            <if test="row.loginUserName != null">
                login_user_name = #{row.loginUserName,jdbcType=VARCHAR},
            </if>
            <if test="row.email != null">
                email = #{row.email,jdbcType=VARCHAR},
            </if>
            <if test="row.isenabled != null">
                isEnabled = #{row.isenabled,jdbcType=INTEGER},
            </if>
            <if test="row.updatedat != null">
                updatedat = #{row.updatedat,jdbcType=TIMESTAMP},
            </if>
            <if test="row.createdat != null">
                createdat = #{row.createdat,jdbcType=TIMESTAMP},
            </if>
            <if test="row.updatedby != null">
                updatedby = #{row.updatedby,jdbcType=VARCHAR},
            </if>
            <if test="row.createdby != null">
                createdby = #{row.createdby,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        update login_user
        set id = #{row.id,jdbcType=INTEGER},
        member_id = #{row.memberId,jdbcType=INTEGER},
        role_id = #{row.roleId,jdbcType=INTEGER},
        login_user_name = #{row.loginUserName,jdbcType=VARCHAR},
        email = #{row.email,jdbcType=VARCHAR},
        isEnabled = #{row.isenabled,jdbcType=INTEGER},
        updatedat = #{row.updatedat,jdbcType=TIMESTAMP},
        createdat = #{row.createdat,jdbcType=TIMESTAMP},
        updatedby = #{row.updatedby,jdbcType=VARCHAR},
        createdby = #{row.createdby,jdbcType=VARCHAR}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.himawari.kakehashi.domain.LoginUser">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        update login_user
        <set>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="loginUserName != null">
                login_user_name = #{loginUserName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="isenabled != null">
                isEnabled = #{isenabled,jdbcType=INTEGER},
            </if>
            <if test="updatedat != null">
                updatedat = #{updatedat,jdbcType=TIMESTAMP},
            </if>
            <if test="createdat != null">
                createdat = #{createdat,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedby != null">
                updatedby = #{updatedby,jdbcType=VARCHAR},
            </if>
            <if test="createdby != null">
                createdby = #{createdby,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.himawari.kakehashi.domain.LoginUser">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        update login_user
        set member_id = #{memberId,jdbcType=INTEGER},
        role_id = #{roleId,jdbcType=INTEGER},
        login_user_name = #{loginUserName,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        isEnabled = #{isenabled,jdbcType=INTEGER},
        updatedat = #{updatedat,jdbcType=TIMESTAMP},
        createdat = #{createdat,jdbcType=TIMESTAMP},
        updatedby = #{updatedby,jdbcType=VARCHAR},
        createdby = #{createdby,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>